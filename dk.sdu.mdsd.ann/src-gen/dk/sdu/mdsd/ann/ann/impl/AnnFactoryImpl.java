/**
 * generated by Xtext 2.11.0
 */
package dk.sdu.mdsd.ann.ann.impl;

import dk.sdu.mdsd.ann.ann.ANNModel;
import dk.sdu.mdsd.ann.ann.Activation;
import dk.sdu.mdsd.ann.ann.AnnFactory;
import dk.sdu.mdsd.ann.ann.AnnPackage;
import dk.sdu.mdsd.ann.ann.Cos;
import dk.sdu.mdsd.ann.ann.Custom;
import dk.sdu.mdsd.ann.ann.Euler;
import dk.sdu.mdsd.ann.ann.Expression;
import dk.sdu.mdsd.ann.ann.External;
import dk.sdu.mdsd.ann.ann.Fac;
import dk.sdu.mdsd.ann.ann.Hidden;
import dk.sdu.mdsd.ann.ann.Input;
import dk.sdu.mdsd.ann.ann.Layer;
import dk.sdu.mdsd.ann.ann.LearningRule;
import dk.sdu.mdsd.ann.ann.Letter;
import dk.sdu.mdsd.ann.ann.NLog;
import dk.sdu.mdsd.ann.ann.NumberLiteral;
import dk.sdu.mdsd.ann.ann.Operand;
import dk.sdu.mdsd.ann.ann.Output;
import dk.sdu.mdsd.ann.ann.Part;
import dk.sdu.mdsd.ann.ann.Power;
import dk.sdu.mdsd.ann.ann.Sin;
import dk.sdu.mdsd.ann.ann.Sqrt;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AnnFactoryImpl extends EFactoryImpl implements AnnFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static AnnFactory init()
  {
    try
    {
      AnnFactory theAnnFactory = (AnnFactory)EPackage.Registry.INSTANCE.getEFactory(AnnPackage.eNS_URI);
      if (theAnnFactory != null)
      {
        return theAnnFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new AnnFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnnFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case AnnPackage.ANN_MODEL: return createANNModel();
      case AnnPackage.LAYER: return createLayer();
      case AnnPackage.HIDDEN: return createHidden();
      case AnnPackage.INPUT: return createInput();
      case AnnPackage.OUTPUT: return createOutput();
      case AnnPackage.LEARNING_RULE: return createLearningRule();
      case AnnPackage.ACTIVATION: return createActivation();
      case AnnPackage.EXTERNAL: return createExternal();
      case AnnPackage.CUSTOM: return createCustom();
      case AnnPackage.EXPRESSION: return createExpression();
      case AnnPackage.MATH: return createMath();
      case AnnPackage.EULER: return createEuler();
      case AnnPackage.NLOG: return createNLog();
      case AnnPackage.SIN: return createSin();
      case AnnPackage.COS: return createCos();
      case AnnPackage.SQRT: return createSqrt();
      case AnnPackage.POWER: return createPower();
      case AnnPackage.NUMBER_LITERAL: return createNumberLiteral();
      case AnnPackage.OPERAND: return createOperand();
      case AnnPackage.LETTER: return createLetter();
      case AnnPackage.PART: return createPart();
      case AnnPackage.FAC: return createFac();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ANNModel createANNModel()
  {
    ANNModelImpl annModel = new ANNModelImpl();
    return annModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Layer createLayer()
  {
    LayerImpl layer = new LayerImpl();
    return layer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Hidden createHidden()
  {
    HiddenImpl hidden = new HiddenImpl();
    return hidden;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Input createInput()
  {
    InputImpl input = new InputImpl();
    return input;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Output createOutput()
  {
    OutputImpl output = new OutputImpl();
    return output;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LearningRule createLearningRule()
  {
    LearningRuleImpl learningRule = new LearningRuleImpl();
    return learningRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Activation createActivation()
  {
    ActivationImpl activation = new ActivationImpl();
    return activation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public External createExternal()
  {
    ExternalImpl external = new ExternalImpl();
    return external;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Custom createCustom()
  {
    CustomImpl custom = new CustomImpl();
    return custom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public dk.sdu.mdsd.ann.ann.Math createMath()
  {
    MathImpl math = new MathImpl();
    return math;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Euler createEuler()
  {
    EulerImpl euler = new EulerImpl();
    return euler;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NLog createNLog()
  {
    NLogImpl nLog = new NLogImpl();
    return nLog;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Sin createSin()
  {
    SinImpl sin = new SinImpl();
    return sin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Cos createCos()
  {
    CosImpl cos = new CosImpl();
    return cos;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Sqrt createSqrt()
  {
    SqrtImpl sqrt = new SqrtImpl();
    return sqrt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Power createPower()
  {
    PowerImpl power = new PowerImpl();
    return power;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NumberLiteral createNumberLiteral()
  {
    NumberLiteralImpl numberLiteral = new NumberLiteralImpl();
    return numberLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Operand createOperand()
  {
    OperandImpl operand = new OperandImpl();
    return operand;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Letter createLetter()
  {
    LetterImpl letter = new LetterImpl();
    return letter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Part createPart()
  {
    PartImpl part = new PartImpl();
    return part;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Fac createFac()
  {
    FacImpl fac = new FacImpl();
    return fac;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnnPackage getAnnPackage()
  {
    return (AnnPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static AnnPackage getPackage()
  {
    return AnnPackage.eINSTANCE;
  }

} //AnnFactoryImpl
